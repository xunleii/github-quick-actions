name: Publish new Lambda version

on:
  push:
    tags: ['*']

jobs:
  build:
    name: Build lambda artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2.3.4
      - uses: actions/setup-go@331ce1d993939866bb63c32c6cbbfd48fa76fc57 #v2.1.4
        with:
          go-version: 1.17.x
      - name: Build new release of github-quick-actions
        run: go build -tags aws_lambda -o github-quick-actions
      - name: Archive code coverage results
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 #v2.2.4
        with:
          name: github-quick-actions
          path: github-quick-actions
          retention-days: 1
          if-no-files-found: error

  publish:
    name: Publish new Lambda on production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2.3.4
      - run: echo "${TF_BACKEND}" > backend.json
      - uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60 #v2.0.10
        with:
          name: github-quick-actions

      - uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec #v1.3.2
      - run: terraform init -backend-config=backend.json
      - name: Publish new release
        run: |
          terraform apply -auto-approve \
            -var app_binary_path=github-quick-actions -var app_version=${GITHUB_REF##*/} \
            -var github_app_id=${GH_APP_ID} -var github_b64pkey=${GH_B64PKEY} -var github_webhook_secret=${GH_WEBHOOK_SECRET} \
            -var enable_tracing=false -var app_log_level=info
