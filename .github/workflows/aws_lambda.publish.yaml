name: Release on AWS Lambda

on:
  push:
    tags: ["*"]

jobs:
  build:
    name: Build lambda artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2.3.4
      - uses: actions/setup-go@331ce1d993939866bb63c32c6cbbfd48fa76fc57 #v2.1.4
        with:
          go-version: 1.17.x
      - name: Build new release of github-quick-actions
        run: go build -tags aws_lambda -o github-quick-actions
      - name: Archive code coverage results
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 #v2.2.4
        with:
          name: github-quick-actions
          path: github-quick-actions
          retention-days: 1
          if-no-files-found: error

  publish:
    name: Publish new Lambda on production
    needs: [build]
    environment: AWS Lambda
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2.3.4
      - uses: actions/download-artifact@b1985abdea713aec19e3253477b5a6472456a2fa
        with:
          name: github-quick-actions

      - uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec #v1.3.2
      - run: echo '${{ secrets.TF_BACKEND }}' > backend.json
        working-directory: deployments/aws_lambda
      - run: terraform init -backend-config=backend.json
        working-directory: deployments/aws_lambda
      - name: Publish new release
        run: terraform apply -var app_version="${GITHUB_REF##*/}" -auto-approve
        env:
          TF_VAR_app_binary_path: ${{ github.workspace }}/github-quick-actions
          TF_VAR_app_log_level: info
          TF_VAR_enable_tracing: 'false'

          TF_VAR_github_app_id: ${{ secrets.GH_APP_ID }}
          TF_VAR_github_b64pkey: ${{ secrets.GH_B64PKEY }}
          TF_VAR_github_webhook_secret: ${{ secrets.GH_WEBHOOK_SECRET }}
        working-directory: deployments/aws_lambda
